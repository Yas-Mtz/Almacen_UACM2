CREATE DEFINER=`root`@`localhost` PROCEDURE `Solicitud`(
    -- variables de entrada
    IN p_id INT, 
    IN p_cantidad INT, 
    IN p_id_almacen INT, 
    IN p_id_persona INT, 
    IN p_id_producto INT
)
BEGIN
    -- declaración de variables locales 
    DECLARE id_solicitud INT;
    DECLARE persona_rol INT;
    DECLARE cantidad_disponible INT;
    DECLARE cantidad_solicitada_hoy INT;

    -- Obtener el ID del rol de la persona
    SELECT id_rol_id INTO persona_rol 
    FROM almacen_app_persona 
    WHERE id_persona = p_id_persona;

    -- Verificar si el usuario no es "Encargado" y está intentando hacer una solicitud al almacén Central
    -- las validaciones realizados son basadas en el id
    IF persona_rol != 1 AND p_id_almacen = 1 THEN
        SIGNAL SQLSTATE '45000' 
        SET MESSAGE_TEXT = 'No tienes permiso para realizar solicitudes al almacén Central.';
    ELSE
    -- si tipo almacen =2 quiere decir que la solictud es a "Cuautepec"
    -- realiza las validaciones siguientes 
        IF p_id_almacen = 2 THEN
            -- Verificar si la cantidad solicitada excede el límite de 2 piezas por día
            SELECT COALESCE(SUM(cantidad), 0) INTO cantidad_solicitada_hoy
            FROM almacen_app_solicitud
            -- asignacion de datos de variables locales con variables de entrada
            WHERE id_persona_id = p_id_persona
            AND id_producto_id = p_id_producto
            AND id_almacen_id = p_id_almacen
            AND DATE(fecha_solicitud) = CURDATE(); -- asegura que las solicitudes hechas en la fecha actual se consideren para la verificación de límites diarios


-- si cantidad solicitada en el dia + la solicitada al momento >2 muestra error 
            IF (cantidad_solicitada_hoy + p_cantidad) > 2 THEN
                SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'No puedes solicitar más de 2 piezas por producto por día.';
            END IF;

            -- Obtener la cantidad disponible del producto en el almacén tabla "almacen_app_producto"
            SELECT cantidad INTO cantidad_disponible 
            FROM almacen_app_producto 
            WHERE id_producto = p_id_producto;

            -- Verificar si hay suficiente cantidad disponible
            IF p_cantidad > cantidad_disponible THEN
                SIGNAL SQLSTATE '45000'
                SET MESSAGE_TEXT = 'La cantidad solicitada excede la cantidad disponible en el almacén.';
            END IF;
        END IF;

        -- Insertar una nueva solicitud en la base de datos y obtener su ID asignado
        -- datos que se insertaran en "almacen_app_solicitud"
        INSERT INTO almacen_app_solicitud (
            tipo_almacen, 
            nombre_persona, 
            nombre_producto, 
            cantidad, 
            fecha_solicitud, 
            id_almacen_id, 
            id_persona_id, 
            id_producto_id
        )
        
        -- valores que se insertarán 
        VALUES (
            (SELECT tipo_almacen FROM almacen_app_almacen WHERE id_almacen = p_id_almacen),
            (SELECT CONCAT(nombre, ' ', apellido_paterno, ' ', apellido_materno) FROM almacen_app_persona WHERE id_persona = p_id_persona),
            (SELECT nombre_producto FROM almacen_app_producto WHERE id_producto = p_id_producto),
           -- cantidad es ingresada por el uusario 
           p_cantidad,
            -- agrega fecha y hora actual (del momento)
            NOW(),
            -- los datos obtenidos son por medio del id 
            p_id_almacen,
            p_id_persona,
            p_id_producto
        );

        -- Obtener el ID de la solicitud recién insertada
        SET id_solicitud = LAST_INSERT_ID();

        -- Condición para actualizar la cantidad disponible en "almacen_app_producto"
        IF p_id_almacen = 2 THEN
            -- Actualizar la cantidad disponible del producto en la tabla "almacen_app_producto"
           -- resta la cantidad de producto que se tiene - la cantidad que se esta solicitando
           
           UPDATE almacen_app_producto
            SET cantidad = cantidad - p_cantidad
            WHERE id_producto = p_id_producto;
        END IF;

        -- Devolver el ID de la solicitud asignada
        SELECT id_solicitud;
    END IF;
END